name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Add uv to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Create virtual environment
      run: uv venv .venv
    
    - name: Install dependencies
      run: |
        uv pip compile pyproject.toml --extra dev -o requirements-dev.txt
        uv pip sync requirements-dev.txt
    
    - name: Lint with ruff
      run: |
        source .venv/bin/activate
        ruff check . --output-format=github
    
    - name: Check formatting with black
      run: |
        source .venv/bin/activate
        black --check .
    
    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
